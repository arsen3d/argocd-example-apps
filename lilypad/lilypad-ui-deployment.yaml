apiVersion: apps/v1
kind: Deployment
metadata:
  name: lilypad-ui
  namespace: lilypad
spec:
  replicas: 1
  selector:
    matchLabels:
      app: lilypad-ui
  template:
    metadata:
      labels:
        app: lilypad-ui
    spec:
      initContainers:
      - name: build
        image: node:16
        command: 
        - /bin/sh
        - -c
        - |
          cd /workspace
          npm install
          npm run build
        volumeMounts:
        - name: workspace
          mountPath: /workspace
        - name: build
          mountPath: /workspace/build
      
      containers:
      - name: nginx
        image: nginx:alpine
        ports:
        - containerPort: 80
        volumeMounts:
        - name: build
          mountPath: /usr/share/nginx/html
        - name: nginx-config
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: default.conf
      
      volumes:
      - name: workspace
        emptyDir: {}
      - name: build
        emptyDir: {}
      - name: nginx-config
        configMap:
          name: nginx-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: lilypad
data:
  default.conf: |
    server {
        listen 80;
        server_name localhost;
        location / {
            root /usr/share/nginx/html;
            try_files $uri $uri/ /index.html;
            index index.html;
        }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: lilypad-ui
  namespace: lilypad
spec:
  selector:
    app: lilypad-ui
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: LoadBalancer

apiVersion: v1
kind: ConfigMap
metadata:
  name: app-source
data:
  Dockerfile: |
    FROM node:16 AS builder
    WORKDIR /app
    COPY . .
    RUN npm install && npm run build

    FROM nginx:alpine
    COPY --from=builder /app/build /usr/share/nginx/html
    EXPOSE 80
    CMD ["nginx", "-g", "daemon off;"]