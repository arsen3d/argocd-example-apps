apiVersion: apps/v1
kind: Deployment
metadata:
  name: lilypad-js-cli
  namespace: lilypad
  labels:
    app: lilypad-js-cli
    app.kubernetes.io/instance: lilypad
spec:
  replicas: 1
  selector:
    matchLabels:
      app: lilypad-js-cli
  template:
    metadata:
      labels:
        app: lilypad-js-cli
        app.kubernetes.io/instance: lilypad
    spec:
      initContainers:
      - name: git-clone
        image: alpine/git
        command:
        - /bin/sh
        - -c
        - |
          git clone https://github.com/Lilypad-Tech/js-cli-wrapper.git /workspace
          cd /workspace
          git checkout poc
        volumeMounts:
        - name: workspace
          mountPath: /workspace
      
      containers:
      - name: run
        image: node:22
        ports:
        - containerPort: 3000
        # env:
        # - name: OPENAI_API_KEY
        #   valueFrom:
        #     secretKeyRef:
        #       name: openai-api-key-secret
        #       key: OPENAI_API_KEY
        # envFrom:
        # - secretRef:
        #     name: lpauth    # Reference to the secret containing env vars
        command: 
        - /bin/sh
        - -c
        - |
          # echo "deb [trusted=yes] https://arsen3d.github.io/lilypad_package/ focal main" | tee /etc/apt/sources.list.d/lilypad.list
          # apt-get -o Acquire::https::Verify-Peer=false -o Acquire::https::Verify-Host=false update
          # apt-get -o Acquire::https::Verify-Peer=false -o Acquire::https::Verify-Host=false install -y lilypad
          # Detect your machine's architecture and set it as $OSARCH
          OSARCH=$(uname -m | awk '{if ($0 ~ /arm64|aarch64/) print "arm64"; else if ($0 ~ /x86_64|amd64/) print "amd64"; else print "unsupported_arch"}') && export OSARCH;
          # Detect your operating system and set it as $OSNAME
          OSNAME=$(uname -s | awk '{if ($1 == "Darwin") print "darwin"; else if ($1 == "Linux") print "linux"; else print "unsupported_os"}') && export OSNAME;
          # Download the latest production build
          curl --insecure https://api.github.com/repos/lilypad-tech/lilypad/releases/latest | grep "browser_download_url.*lilypad-$OSNAME-$OSARCH-cpu" | cut -d : -f 2,3 | tr -d \" | wget -i - -O lilypad

          # Make Lilypad executable and install it
          chmod +x lilypad
          mv lilypad /usr/local/bin/lilypad
          cd /workspace
          npm install
          npm run dev
        volumeMounts:
        - name: workspace
          mountPath: /workspace
        resources:
          limits:
            memory: "512Mi"
            cpu: "500m"
          requests:
            memory: "256Mi"
            cpu: "250m"
      # - name: nginx
      #   image: nginx:alpine
      #   ports:
      #   - containerPort: 80
      #   volumeMounts:
      #   # - name: build
      #   #   mountPath: /usr/share/nginx/html
      #   - name: nginx-config
      #     mountPath: /etc/nginx/conf.d
          
      volumes:
      - name: workspace
        emptyDir: {}
      # - name: build
      #   emptyDir: {}
      # - name: nginx-config
      #   configMap:
      #     name: nginx-config

---
# http://js-cli.lilypad.svc.cluster.local:3000
apiVersion: v1
kind: Service
metadata:
  name: js-cli
  namespace: lilypad
  labels:
    app: lilypad-js-cli
    app.kubernetes.io/instance: lilypad
spec:
  selector:
    app: lilypad-js-cli
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
  type: LoadBalancer