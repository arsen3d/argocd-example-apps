apiVersion: apps/v1
kind: Deployment
metadata:
  name: appn
  namespace: lilypad
spec:
  replicas: 1
  selector:
    matchLabels:
      app: appn
  template:
    metadata:
      labels:
        app: appn
    spec:
      containers:
      - name: appn
        image: jc21/nginx-proxy-manager:latest
        volumeMounts:
        - name: npm-data
          mountPath: /data
        - name: npm-letsencrypt
          mountPath: /etc/letsencrypt
        # env:
        # - name: DISABLE_IPV6
        #   value: "true"
        # - name: PUID
        #   value: "1000"
        # - name: PGID 
        #   value: "1000"
        # - name: DEBUG 
        #   value: "true"  
        # - name: DEVELOPMENT 
        #   value: "true"    
        ports:
        - containerPort: 81
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
          requests:
            memory: "64Mi"
            cpu: "250m"
      - name: cloudflared
        image: cloudflare/cloudflared:latest
        args:
        - "tunnel"
        - "run"
        - "--token"
        - "$(CLOUDFLARED_TOKEN)"
        env:
        - name: DISABLE_IPV6
          value: "true"
        - name: CLOUDFLARED_TOKEN
          valueFrom:
            secretKeyRef:
              name: manager
              key: CLOUDFLARED_TOKEN
        # env:
        # - name: CLOUDFLARED_TOKEN
        #   valueFrom:
        #     secretKeyRef:
        #       name: lpauth
        #       key: CLOUDFLARED_TOKEN
        resources:
          limits:
            memory: "512Mi"
            cpu: "500m"
          requests:
            memory: "256Mi"
            cpu: "250m"
      volumes:
      - name: npm-data
        persistentVolumeClaim:
          claimName: npm-data-pvc1
      - name: npm-letsencrypt
        persistentVolumeClaim:
          claimName: npm-letsencrypt-pvc1
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: npm-data-pv
spec:
  storageClassName: manual
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: /var/lib/rancher/data/npm-data
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: npm-letsencrypt-pv
spec:
  storageClassName: manual
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: /var/lib/rancher/data/npm-letsencrypt
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: npm-data-pvc1
  namespace: lilypad
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
  volumeName: npm-data-pv
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: npm-letsencrypt-pvc1
  namespace: lilypad
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
  volumeName: npm-letsencrypt-pv
---
apiVersion: v1
kind: Service
metadata:
  name: app
  namespace: lilypad
spec:
  selector:
    app: appn
  ports:
  - name: admin
    port: 81
    targetPort: 81
  # - name: http
  #   port: 80
  #   targetPort: 80
  # - name: https
  #   port: 443
  #   targetPort: 443


# ---
# apiVersion: networking.k8s.io/v1
# kind: NetworkPolicy
# metadata:
#   name: lilypad-network-policy
#   namespace: lilypad
# spec:
#   podSelector:
#     matchLabels:
#       app: lilypad-ui
#   policyTypes:
#     - Ingress
#     - Egress
#   ingress:
#     - from:
#         - namespaceSelector:
#             matchLabels:
#               name: lilypad
#   egress:
#     - to:
#         - namespaceSelector:
#             matchLabels:
#               name: lilypad


---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: lilypad-ingress
  namespace: lilypad
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: localhost
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: app
            port:
              number: 81