apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloudflared
  namespace: lilypad
  labels:
    app: cloudflared
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cloudflared
  template:
    metadata:
      labels:
        app: cloudflared
    spec:
      containers:
      - name: cloudflared
        image: cloudflare/cloudflared:2024.11.1
        args:
        - "tunnel"
        - "--no-autoupdate"
        - "run"
        - "--token"
        - "$(CLOUDFLARED_TOKEN)"
        env:
        - name: CLOUDFLARED_TOKEN
          valueFrom:
            secretKeyRef:
              name: lpauth
              key: CLOUDFLARED_TOKEN
        resources:
          limits:
            cpu: "500m"
            memory: "256Mi"
          requests:
            cpu: "100m"
            memory: "128Mi"
        securityContext:
          runAsNonRoot: true
          allowPrivilegeEscalation: false
          capabilities:
            add: ["NET_ADMIN"]
        livenessProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 30
      restartPolicy: Always
      volumes:
      - name: npm-data
        persistentVolumeClaim:
          claimName: npm-data-pvc
      - name: npm-letsencrypt
        persistentVolumeClaim:
          claimName: npm-letsencrypt-pvc
# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: npm-data-pvc
#   namespace: lilypad
# spec:
#   accessModes:
#     - ReadWriteOnce
#   resources:
#     requests:
#       storage: 1Gi
# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: npm-letsencrypt-pvc
#   namespace: lilypad
# spec:
#   accessModes:
#     - ReadWriteOnce
#   resources:
#     requests:
#       storage: 1Gi
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: nginx-proxy-manager
# spec:
#   selector:
#     app: nginx-proxy-manager
#   ports:
#   - port: 81
#     targetPort: 81